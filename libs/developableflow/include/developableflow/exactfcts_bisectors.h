/*
 
 2018, Oded Stein, Eitan Grinspun and Keenan Crane
 
 This file is part of the code for "Developability of Triangle Meshes".
 
 The code for "Developability of Triangle Meshes" is free software: you can
 redistribute it and/or modify it under the terms of the GNU General Public
 License as published by the Free Software Foundation, either version 2 of the
 License, or (at your option) any later version.
 
 The code for "Developability of Triangle Meshes" is distributed in the hope
 that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with the code for "Developability of Triangle Meshes". If not,
 see <https://www.gnu.org/licenses/>.
 
 */

//Exact functions computed with Mathematica. This is not an actual header file, so include with care

#ifndef DEVELOPABLEFLOW_MINWIDTH_EXACTFCTS_H
#define DEVELOPABLEFLOW_MINWIDTH_EXACTFCTS_H

namespace MinwidthFcts {
    
    template<typename Scalar>
    Scalar gammasq_ex(const Eigen::Matrix<Scalar, 3, 1>& Nv, const Eigen::Matrix<Scalar, 3, 1>& x, const Eigen::Matrix<Scalar, 3, 1>& y) {
        const Scalar Nv1=Nv(0), Nv2=Nv(1), Nv3=Nv(2), x1=x(0), x2=x(1), x3=x(2), y1=y(0), y2=y(1), y3=y(2);
        return 4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)));
    }
    
    
    template<typename Scalar, typename Sigmatype>
    Eigen::Matrix<Scalar, 3, 1> u_ex(const Eigen::Matrix<Scalar, 3, 1>& Nv, const Eigen::Matrix<Scalar, 3, 1>& x, const Eigen::Matrix<Scalar, 3, 1>& y, const Sigmatype& sigma) {
        const Scalar Nv1=Nv(0), Nv2=Nv(1), Nv3=Nv(2), x1=x(0), x2=x(1), x3=x(2), y1=y(0), y2=y(1), y3=y(2);
        Eigen::Matrix<Scalar, 3, 1> u;
        u << (x1 + y1 + ((Nv3*(x2 - y2) + Nv2*(-x3 + y3))*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (x2 + y2 + ((Nv3*(-x1 + y1) + Nv1*(x3 - y3))*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (x3 + y3 + ((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2.;
        return u;
    }
    
    template<typename Scalar>
    Eigen::Matrix<Scalar, 3, 1> u_ex_deg(const Eigen::Matrix<Scalar, 3, 1>& Nv, const Eigen::Matrix<Scalar, 3, 1>& x, const Eigen::Matrix<Scalar, 3, 1>& y) {
        const Scalar Nv1=Nv(0), Nv2=Nv(1), Nv3=Nv(2), x1=x(0), x2=x(1), x3=x(2), y1=y(0), y2=y(1), y3=y(2);
        Eigen::Matrix<Scalar, 3, 1> u;
        u << (x1 + y1 - (2*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3)*(Nv3*(x2 - y2) + Nv2*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (x2 + y2 - (2*(-(Nv3*x2*y1) + Nv2*x3*y1 + Nv3*x1*y2 - Nv1*x3*y2 - Nv2*x1*y3 + Nv1*x2*y3)*(Nv3*(x1 - y1) + Nv1*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (x3 + y3 - (2*(Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2.;
        return u;
    }
    
    
    template<typename Scalar, typename Sigmatype>
    Eigen::Matrix<Scalar, 3, 3> dudx_ex(const Eigen::Matrix<Scalar, 3, 1>& Nv, const Eigen::Matrix<Scalar, 3, 1>& x, const Eigen::Matrix<Scalar, 3, 1>& y, const Sigmatype& sigma) {
        const Scalar Nv1=Nv(0), Nv2=Nv(1), Nv3=Nv(2), x1=x(0), x2=x(1), x3=x(2), y1=y(0), y2=y(1), y3=y(2);
        Eigen::Matrix<Scalar, 3, 3> dudx;
        dudx << (1 + ((Nv3*(x2 - y2) + Nv2*(-x3 + y3))*(2*Nv3*y2 - 2*Nv2*y3 + (sigma*(8*(-(Nv3*y2) + Nv2*y3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (pow(Nv2,2)*(2*x1 - 2*y1) + pow(Nv3,2)*(2*x1 - 2*y1) - 2*Nv1*Nv2*(x2 - y2) - 2*Nv1*Nv3*(x3 - y3))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2)) - (2*x1 + 2*y1)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((pow(Nv2,2)*(2*x1 - 2*y1) + pow(Nv3,2)*(2*x1 - 2*y1) - 2*Nv1*Nv2*(x2 - y2) - 2*Nv1*Nv3*(x3 - y3))*(Nv3*(x2 - y2) + Nv2*(-x3 + y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2))/2., (((Nv3*(x2 - y2) + Nv2*(-x3 + y3))*(-2*Nv3*y1 + 2*Nv1*y3 + (sigma*(8*(Nv3*y1 - Nv1*y3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (pow(Nv1,2)*(2*x2 - 2*y2) + pow(Nv3,2)*(2*x2 - 2*y2) - 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2)) - (2*x2 + 2*y2)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((pow(Nv1,2)*(2*x2 - 2*y2) + pow(Nv3,2)*(2*x2 - 2*y2) - 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))*(Nv3*(x2 - y2) + Nv2*(-x3 + y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) + (Nv3*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (((Nv3*(x2 - y2) + Nv2*(-x3 + y3))*(2*Nv2*y1 - 2*Nv1*y2 + (sigma*(8*(-(Nv2*y1) + Nv1*y2)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (-2*Nv1*Nv3*(x1 - y1) - 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(2*x3 - 2*y3) + pow(Nv2,2)*(2*x3 - 2*y3))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2)) - (2*x3 + 2*y3)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((-2*Nv1*Nv3*(x1 - y1) - 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(2*x3 - 2*y3) + pow(Nv2,2)*(2*x3 - 2*y3))*(Nv3*(x2 - y2) + Nv2*(-x3 + y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (Nv2*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (((Nv3*(-x1 + y1) + Nv1*(x3 - y3))*(2*Nv3*y2 - 2*Nv2*y3 + (sigma*(8*(-(Nv3*y2) + Nv2*y3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (pow(Nv2,2)*(2*x1 - 2*y1) + pow(Nv3,2)*(2*x1 - 2*y1) - 2*Nv1*Nv2*(x2 - y2) - 2*Nv1*Nv3*(x3 - y3))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2)) - (2*x1 + 2*y1)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv3*(-x1 + y1) + Nv1*(x3 - y3))*(pow(Nv2,2)*(2*x1 - 2*y1) + pow(Nv3,2)*(2*x1 - 2*y1) - 2*Nv1*Nv2*(x2 - y2) - 2*Nv1*Nv3*(x3 - y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (Nv3*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (1 + ((Nv3*(-x1 + y1) + Nv1*(x3 - y3))*(-2*Nv3*y1 + 2*Nv1*y3 + (sigma*(8*(Nv3*y1 - Nv1*y3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (pow(Nv1,2)*(2*x2 - 2*y2) + pow(Nv3,2)*(2*x2 - 2*y2) - 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2)) - (2*x2 + 2*y2)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((pow(Nv1,2)*(2*x2 - 2*y2) + pow(Nv3,2)*(2*x2 - 2*y2) - 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))*(Nv3*(-x1 + y1) + Nv1*(x3 - y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2))/2., (((Nv3*(-x1 + y1) + Nv1*(x3 - y3))*(2*Nv2*y1 - 2*Nv1*y2 + (sigma*(8*(-(Nv2*y1) + Nv1*y2)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (-2*Nv1*Nv3*(x1 - y1) - 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(2*x3 - 2*y3) + pow(Nv2,2)*(2*x3 - 2*y3))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2)) - (2*x3 + 2*y3)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((-2*Nv1*Nv3*(x1 - y1) - 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(2*x3 - 2*y3) + pow(Nv2,2)*(2*x3 - 2*y3))*(Nv3*(-x1 + y1) + Nv1*(x3 - y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) + (Nv1*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(2*Nv3*y2 - 2*Nv2*y3 + (sigma*(8*(-(Nv3*y2) + Nv2*y3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (pow(Nv2,2)*(2*x1 - 2*y1) + pow(Nv3,2)*(2*x1 - 2*y1) - 2*Nv1*Nv2*(x2 - y2) - 2*Nv1*Nv3*(x3 - y3))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2)) - (2*x1 + 2*y1)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(pow(Nv2,2)*(2*x1 - 2*y1) + pow(Nv3,2)*(2*x1 - 2*y1) - 2*Nv1*Nv2*(x2 - y2) - 2*Nv1*Nv3*(x3 - y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) + (Nv2*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(-2*Nv3*y1 + 2*Nv1*y3 + (sigma*(8*(Nv3*y1 - Nv1*y3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (pow(Nv1,2)*(2*x2 - 2*y2) + pow(Nv3,2)*(2*x2 - 2*y2) - 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2)) - (2*x2 + 2*y2)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(pow(Nv1,2)*(2*x2 - 2*y2) + pow(Nv3,2)*(2*x2 - 2*y2) - 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (Nv1*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (1 + ((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(2*Nv2*y1 - 2*Nv1*y2 + (sigma*(8*(-(Nv2*y1) + Nv1*y2)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (-2*Nv1*Nv3*(x1 - y1) - 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(2*x3 - 2*y3) + pow(Nv2,2)*(2*x3 - 2*y3))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2)) - (2*x3 + 2*y3)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(-2*Nv1*Nv3*(x1 - y1) - 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(2*x3 - 2*y3) + pow(Nv2,2)*(2*x3 - 2*y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2))/2.;
        return dudx;
    }
    
    template<typename Scalar>
    Eigen::Matrix<Scalar, 3, 3> dudx_ex_deg(const Eigen::Matrix<Scalar, 3, 1>& Nv, const Eigen::Matrix<Scalar, 3, 1>& x, const Eigen::Matrix<Scalar, 3, 1>& y) {
        const Scalar Nv1=Nv(0), Nv2=Nv(1), Nv3=Nv(2), x1=x(0), x2=x(1), x3=x(2), y1=y(0), y2=y(1), y3=y(2);
        Eigen::Matrix<Scalar, 3, 3> dudx;
        dudx << (1 + (2*(pow(Nv2,2)*(2*x1 - 2*y1) + pow(Nv3,2)*(2*x1 - 2*y1) - 2*Nv1*Nv2*(x2 - y2) - 2*Nv1*Nv3*(x3 - y3))*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3)* (Nv3*(x2 - y2) + Nv2*(-x3 + y3)))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(-(Nv3*y2) + Nv2*y3)*(Nv3*(x2 - y2) + Nv2*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(pow(Nv1,2)*(2*x2 - 2*y2) + pow(Nv3,2)*(2*x2 - 2*y2) - 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3)* (Nv3*(x2 - y2) + Nv2*(-x3 + y3)))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*Nv3*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - (2*(Nv3*y1 - Nv1*y3)*(Nv3*(x2 - y2) + Nv2*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(-2*Nv1*Nv3*(x1 - y1) - 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(2*x3 - 2*y3) + pow(Nv2,2)*(2*x3 - 2*y3))*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3)* (Nv3*(x2 - y2) + Nv2*(-x3 + y3)))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) + (2*Nv2*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - (2*(-(Nv2*y1) + Nv1*y2)*(Nv3*(x2 - y2) + Nv2*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(pow(Nv2,2)*(2*x1 - 2*y1) + pow(Nv3,2)*(2*x1 - 2*y1) - 2*Nv1*Nv2*(x2 - y2) - 2*Nv1*Nv3*(x3 - y3))*(-(Nv3*x2*y1) + Nv2*x3*y1 + Nv3*x1*y2 - Nv1*x3*y2 - Nv2*x1*y3 + Nv1*x2*y3)* (Nv3*(x1 - y1) + Nv1*(-x3 + y3)))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*Nv3*(-(Nv3*x2*y1) + Nv2*x3*y1 + Nv3*x1*y2 - Nv1*x3*y2 - Nv2*x1*y3 + Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - (2*(Nv3*y2 - Nv2*y3)*(Nv3*(x1 - y1) + Nv1*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (1 + (2*(pow(Nv1,2)*(2*x2 - 2*y2) + pow(Nv3,2)*(2*x2 - 2*y2) - 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))*(-(Nv3*x2*y1) + Nv2*x3*y1 + Nv3*x1*y2 - Nv1*x3*y2 - Nv2*x1*y3 + Nv1*x2*y3)* (Nv3*(x1 - y1) + Nv1*(-x3 + y3)))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(-(Nv3*y1) + Nv1*y3)*(Nv3*(x1 - y1) + Nv1*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(-2*Nv1*Nv3*(x1 - y1) - 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(2*x3 - 2*y3) + pow(Nv2,2)*(2*x3 - 2*y3))*(-(Nv3*x2*y1) + Nv2*x3*y1 + Nv3*x1*y2 - Nv1*x3*y2 - Nv2*x1*y3 + Nv1*x2*y3)* (Nv3*(x1 - y1) + Nv1*(-x3 + y3)))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) + (2*Nv1*(-(Nv3*x2*y1) + Nv2*x3*y1 + Nv3*x1*y2 - Nv1*x3*y2 - Nv2*x1*y3 + Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - (2*(Nv2*y1 - Nv1*y2)*(Nv3*(x1 - y1) + Nv1*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(pow(Nv2,2)*(2*x1 - 2*y1) + pow(Nv3,2)*(2*x1 - 2*y1) - 2*Nv1*Nv2*(x2 - y2) - 2*Nv1*Nv3*(x3 - y3))* (Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(-(Nv3*y2) + Nv2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - (2*Nv2*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(pow(Nv1,2)*(2*x2 - 2*y2) + pow(Nv3,2)*(2*x2 - 2*y2) - 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))* (Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(Nv3*y1 - Nv1*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) + (2*Nv1*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (1 + (2*(Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(-2*Nv1*Nv3*(x1 - y1) - 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(2*x3 - 2*y3) + pow(Nv2,2)*(2*x3 - 2*y3))* (Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(-(Nv2*y1) + Nv1*y2)*(Nv2*(x1 - y1) + Nv1*(-x2 + y2)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2.;
        return dudx;
    }
    
    
    template<typename Scalar, typename Sigmatype>
    Eigen::Matrix<Scalar, 3, 3> dudy_ex(const Eigen::Matrix<Scalar, 3, 1>& Nv, const Eigen::Matrix<Scalar, 3, 1>& x, const Eigen::Matrix<Scalar, 3, 1>& y, const Sigmatype& sigma) {
        const Scalar Nv1=Nv(0), Nv2=Nv(1), Nv3=Nv(2), x1=x(0), x2=x(1), x3=x(2), y1=y(0), y2=y(1), y3=y(2);
        Eigen::Matrix<Scalar, 3, 3> dudy;
        dudy << (1 + ((Nv3*(x2 - y2) + Nv2*(-x3 + y3))*(-2*Nv3*x2 + 2*Nv2*x3 + (sigma*(8*(Nv3*x2 - Nv2*x3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (pow(Nv2,2)*(-2*x1 + 2*y1) + pow(Nv3,2)*(-2*x1 + 2*y1) + 2*Nv1*Nv2*(x2 - y2) + 2*Nv1*Nv3*(x3 - y3))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2)) - (2*x1 + 2*y1)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((pow(Nv2,2)*(-2*x1 + 2*y1) + pow(Nv3,2)*(-2*x1 + 2*y1) + 2*Nv1*Nv2*(x2 - y2) + 2*Nv1*Nv3*(x3 - y3))*(Nv3*(x2 - y2) + Nv2*(-x3 + y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2))/2., (((Nv3*(x2 - y2) + Nv2*(-x3 + y3))*(2*Nv3*x1 - 2*Nv1*x3 + (sigma*(8*(-(Nv3*x1) + Nv1*x3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (pow(Nv1,2)*(-2*x2 + 2*y2) + pow(Nv3,2)*(-2*x2 + 2*y2) + 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2)) - (2*x2 + 2*y2)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((pow(Nv1,2)*(-2*x2 + 2*y2) + pow(Nv3,2)*(-2*x2 + 2*y2) + 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))*(Nv3*(x2 - y2) + Nv2*(-x3 + y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (Nv3*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (((Nv3*(x2 - y2) + Nv2*(-x3 + y3))*(-2*Nv2*x1 + 2*Nv1*x2 + (sigma*(8*(Nv2*x1 - Nv1*x2)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (2*Nv1*Nv3*(x1 - y1) + 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(-2*x3 + 2*y3) + pow(Nv2,2)*(-2*x3 + 2*y3)) - (2*x3 + 2*y3)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv3*(x2 - y2) + Nv2*(-x3 + y3))*(2*Nv1*Nv3*(x1 - y1) + 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(-2*x3 + 2*y3) + pow(Nv2,2)*(-2*x3 + 2*y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) + (Nv2*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (((Nv3*(-x1 + y1) + Nv1*(x3 - y3))*(-2*Nv3*x2 + 2*Nv2*x3 + (sigma*(8*(Nv3*x2 - Nv2*x3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (pow(Nv2,2)*(-2*x1 + 2*y1) + pow(Nv3,2)*(-2*x1 + 2*y1) + 2*Nv1*Nv2*(x2 - y2) + 2*Nv1*Nv3*(x3 - y3))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2)) - (2*x1 + 2*y1)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv3*(-x1 + y1) + Nv1*(x3 - y3))*(pow(Nv2,2)*(-2*x1 + 2*y1) + pow(Nv3,2)*(-2*x1 + 2*y1) + 2*Nv1*Nv2*(x2 - y2) + 2*Nv1*Nv3*(x3 - y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) + (Nv3*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (1 + ((Nv3*(-x1 + y1) + Nv1*(x3 - y3))*(2*Nv3*x1 - 2*Nv1*x3 + (sigma*(8*(-(Nv3*x1) + Nv1*x3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (pow(Nv1,2)*(-2*x2 + 2*y2) + pow(Nv3,2)*(-2*x2 + 2*y2) + 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2)) - (2*x2 + 2*y2)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((pow(Nv1,2)*(-2*x2 + 2*y2) + pow(Nv3,2)*(-2*x2 + 2*y2) + 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))*(Nv3*(-x1 + y1) + Nv1*(x3 - y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2))/2., (((Nv3*(-x1 + y1) + Nv1*(x3 - y3))*(-2*Nv2*x1 + 2*Nv1*x2 + (sigma*(8*(Nv2*x1 - Nv1*x2)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (2*Nv1*Nv3*(x1 - y1) + 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(-2*x3 + 2*y3) + pow(Nv2,2)*(-2*x3 + 2*y3)) - (2*x3 + 2*y3)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv3*(-x1 + y1) + Nv1*(x3 - y3))*(2*Nv1*Nv3*(x1 - y1) + 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(-2*x3 + 2*y3) + pow(Nv2,2)*(-2*x3 + 2*y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (Nv1*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(-2*Nv3*x2 + 2*Nv2*x3 + (sigma*(8*(Nv3*x2 - Nv2*x3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (pow(Nv2,2)*(-2*x1 + 2*y1) + pow(Nv3,2)*(-2*x1 + 2*y1) + 2*Nv1*Nv2*(x2 - y2) + 2*Nv1*Nv3*(x3 - y3))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2)) - (2*x1 + 2*y1)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(pow(Nv2,2)*(-2*x1 + 2*y1) + pow(Nv3,2)*(-2*x1 + 2*y1) + 2*Nv1*Nv2*(x2 - y2) + 2*Nv1*Nv3*(x3 - y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (Nv2*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(2*Nv3*x1 - 2*Nv1*x3 + (sigma*(8*(-(Nv3*x1) + Nv1*x3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (pow(Nv1,2)*(-2*x2 + 2*y2) + pow(Nv3,2)*(-2*x2 + 2*y2) + 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2)) - (2*x2 + 2*y2)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(pow(Nv1,2)*(-2*x2 + 2*y2) + pow(Nv3,2)*(-2*x2 + 2*y2) + 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) + (Nv1*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (1 + ((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(-2*Nv2*x1 + 2*Nv1*x2 + (sigma*(8*(Nv2*x1 - Nv1*x2)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (2*Nv1*Nv3*(x1 - y1) + 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(-2*x3 + 2*y3) + pow(Nv2,2)*(-2*x3 + 2*y3)) - (2*x3 + 2*y3)*(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(2*Nv1*Nv3*(x1 - y1) + 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(-2*x3 + 2*y3) + pow(Nv2,2)*(-2*x3 + 2*y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2))/2.;
        return dudy;
    }
    
    template<typename Scalar>
    Eigen::Matrix<Scalar, 3, 3> dudy_ex_deg(const Eigen::Matrix<Scalar, 3, 1>& Nv, const Eigen::Matrix<Scalar, 3, 1>& x, const Eigen::Matrix<Scalar, 3, 1>& y) {
        const Scalar Nv1=Nv(0), Nv2=Nv(1), Nv3=Nv(2), x1=x(0), x2=x(1), x3=x(2), y1=y(0), y2=y(1), y3=y(2);
        Eigen::Matrix<Scalar, 3, 3> dudy;
        dudy << (1 + (2*(pow(Nv2,2)*(-2*x1 + 2*y1) + pow(Nv3,2)*(-2*x1 + 2*y1) + 2*Nv1*Nv2*(x2 - y2) + 2*Nv1*Nv3*(x3 - y3))*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3)* (Nv3*(x2 - y2) + Nv2*(-x3 + y3)))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(Nv3*x2 - Nv2*x3)*(Nv3*(x2 - y2) + Nv2*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(pow(Nv1,2)*(-2*x2 + 2*y2) + pow(Nv3,2)*(-2*x2 + 2*y2) + 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3)* (Nv3*(x2 - y2) + Nv2*(-x3 + y3)))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) + (2*Nv3*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - (2*(-(Nv3*x1) + Nv1*x3)*(Nv3*(x2 - y2) + Nv2*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3)*(Nv3*(x2 - y2) + Nv2*(-x3 + y3))* (2*Nv1*Nv3*(x1 - y1) + 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(-2*x3 + 2*y3) + pow(Nv2,2)*(-2*x3 + 2*y3)))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*Nv2*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - (2*(Nv2*x1 - Nv1*x2)*(Nv3*(x2 - y2) + Nv2*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(pow(Nv2,2)*(-2*x1 + 2*y1) + pow(Nv3,2)*(-2*x1 + 2*y1) + 2*Nv1*Nv2*(x2 - y2) + 2*Nv1*Nv3*(x3 - y3))*(-(Nv3*x2*y1) + Nv2*x3*y1 + Nv3*x1*y2 - Nv1*x3*y2 - Nv2*x1*y3 + Nv1*x2*y3)* (Nv3*(x1 - y1) + Nv1*(-x3 + y3)))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) + (2*Nv3*(-(Nv3*x2*y1) + Nv2*x3*y1 + Nv3*x1*y2 - Nv1*x3*y2 - Nv2*x1*y3 + Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - (2*(-(Nv3*x2) + Nv2*x3)*(Nv3*(x1 - y1) + Nv1*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (1 + (2*(pow(Nv1,2)*(-2*x2 + 2*y2) + pow(Nv3,2)*(-2*x2 + 2*y2) + 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))*(-(Nv3*x2*y1) + Nv2*x3*y1 + Nv3*x1*y2 - Nv1*x3*y2 - Nv2*x1*y3 + Nv1*x2*y3)* (Nv3*(x1 - y1) + Nv1*(-x3 + y3)))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(Nv3*x1 - Nv1*x3)*(Nv3*(x1 - y1) + Nv1*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(-(Nv3*x2*y1) + Nv2*x3*y1 + Nv3*x1*y2 - Nv1*x3*y2 - Nv2*x1*y3 + Nv1*x2*y3)*(Nv3*(x1 - y1) + Nv1*(-x3 + y3))* (2*Nv1*Nv3*(x1 - y1) + 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(-2*x3 + 2*y3) + pow(Nv2,2)*(-2*x3 + 2*y3)))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*Nv1*(-(Nv3*x2*y1) + Nv2*x3*y1 + Nv3*x1*y2 - Nv1*x3*y2 - Nv2*x1*y3 + Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - (2*(-(Nv2*x1) + Nv1*x2)*(Nv3*(x1 - y1) + Nv1*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(pow(Nv2,2)*(-2*x1 + 2*y1) + pow(Nv3,2)*(-2*x1 + 2*y1) + 2*Nv1*Nv2*(x2 - y2) + 2*Nv1*Nv3*(x3 - y3))* (Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(Nv3*x2 - Nv2*x3)*(Nv2*(x1 - y1) + Nv1*(-x2 + y2)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) + (2*Nv2*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(pow(Nv1,2)*(-2*x2 + 2*y2) + pow(Nv3,2)*(-2*x2 + 2*y2) + 2*Nv2*(Nv1*(x1 - y1) + Nv3*(x3 - y3)))* (Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(-(Nv3*x1) + Nv1*x3)*(Nv2*(x1 - y1) + Nv1*(-x2 + y2)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - (2*Nv1*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (1 + (2*(Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3)* (2*Nv1*Nv3*(x1 - y1) + 2*Nv2*Nv3*(x2 - y2) + pow(Nv1,2)*(-2*x3 + 2*y3) + pow(Nv2,2)*(-2*x3 + 2*y3)))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(Nv2*x1 - Nv1*x2)*(Nv2*(x1 - y1) + Nv1*(-x2 + y2)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2.;
        return dudy;
    }
    
    
    template<typename Scalar, typename Sigmatype>
    Eigen::Matrix<Scalar, 3, 3> dudv_ex(const Eigen::Matrix<Scalar, 3, 1>& Nv, const Eigen::Matrix<Scalar, 3, 1>& x, const Eigen::Matrix<Scalar, 3, 1>& y, const Sigmatype& sigma) {
        const Scalar Nv1=Nv(0), Nv2=Nv(1), Nv3=Nv(2), x1=x(0), x2=x(1), x3=x(2), y1=y(0), y2=y(1), y3=y(2);
        Eigen::Matrix<Scalar, 3, 3> dudv;
        dudv << (((Nv3*(x2 - y2) + Nv2*(-x3 + y3))*(-2*x3*y2 + 2*x2*y3 + (sigma*(8*(x3*y2 - x2*y3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (-2*Nv2*(x1 - y1)*(x2 - y2) - 2*Nv3*(x1 - y1)*(x3 - y3) + 2*Nv1*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv3*(x2 - y2) + Nv2*(-x3 + y3))*(-2*Nv2*(x1 - y1)*(x2 - y2) - 2*Nv3*(x1 - y1)*(x3 - y3) + 2*Nv1*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2))/2., (((Nv3*(x2 - y2) + Nv2*(-x3 + y3))*(2*x3*y1 - 2*x1*y3 + (sigma*(8*(-(x3*y1) + x1*y3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (-2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) + 2*Nv2*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv3*(x2 - y2) + Nv2*(-x3 + y3))*(-2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) + 2*Nv2*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) + ((-x3 + y3)*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (((Nv3*(x2 - y2) + Nv2*(-x3 + y3))*(-2*x2*y1 + 2*x1*y2 + (sigma*(8*(x2*y1 - x1*y2)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (2*Nv3*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv1*(x1 - y1)*(x3 - y3) - 2*Nv2*(x2 - y2)*(x3 - y3))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((2*Nv3*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv1*(x1 - y1)*(x3 - y3) - 2*Nv2*(x2 - y2)*(x3 - y3))*(Nv3*(x2 - y2) + Nv2*(-x3 + y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) + ((x2 - y2)*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (((Nv3*(-x1 + y1) + Nv1*(x3 - y3))*(-2*x3*y2 + 2*x2*y3 + (sigma*(8*(x3*y2 - x2*y3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (-2*Nv2*(x1 - y1)*(x2 - y2) - 2*Nv3*(x1 - y1)*(x3 - y3) + 2*Nv1*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv3*(-x1 + y1) + Nv1*(x3 - y3))*(-2*Nv2*(x1 - y1)*(x2 - y2) - 2*Nv3*(x1 - y1)*(x3 - y3) + 2*Nv1*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) + ((x3 - y3)*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (((Nv3*(-x1 + y1) + Nv1*(x3 - y3))*(2*x3*y1 - 2*x1*y3 + (sigma*(8*(-(x3*y1) + x1*y3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (-2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) + 2*Nv2*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv3*(-x1 + y1) + Nv1*(x3 - y3))*(-2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) + 2*Nv2*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2))/2., (((Nv3*(-x1 + y1) + Nv1*(x3 - y3))*(-2*x2*y1 + 2*x1*y2 + (sigma*(8*(x2*y1 - x1*y2)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (2*Nv3*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv1*(x1 - y1)*(x3 - y3) - 2*Nv2*(x2 - y2)*(x3 - y3))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv3*(-x1 + y1) + Nv1*(x3 - y3))*(2*Nv3*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv1*(x1 - y1)*(x3 - y3) - 2*Nv2*(x2 - y2)*(x3 - y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) + ((-x1 + y1)*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(-2*x3*y2 + 2*x2*y3 + (sigma*(8*(x3*y2 - x2*y3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (-2*Nv2*(x1 - y1)*(x2 - y2) - 2*Nv3*(x1 - y1)*(x3 - y3) + 2*Nv1*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(-2*Nv2*(x1 - y1)*(x2 - y2) - 2*Nv3*(x1 - y1)*(x3 - y3) + 2*Nv1*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) + ((-x2 + y2)*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(2*x3*y1 - 2*x1*y3 + (sigma*(8*(-(x3*y1) + x1*y3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (-2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) + 2*Nv2*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(-2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) + 2*Nv2*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) + ((x1 - y1)*(-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., (((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(-2*x2*y1 + 2*x1*y2 + (sigma*(8*(x2*y1 - x1*y2)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3) - (2*Nv3*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv1*(x1 - y1)*(x3 - y3) - 2*Nv2*(x2 - y2)*(x3 - y3))* (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))))/ (2.*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)))))))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - ((Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(2*Nv3*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv1*(x1 - y1)*(x3 - y3) - 2*Nv2*(x2 - y2)*(x3 - y3))* (-2*Nv3*x2*y1 + 2*Nv2*x3*y1 + 2*Nv3*x1*y2 - 2*Nv1*x3*y2 - 2*Nv2*x1*y3 + 2*Nv1*x2*y3 + sigma*sqrt(4*pow(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3,2) - (-4 + pow(x1,2) + pow(x2,2) + pow(x3,2) + 2*x1*y1 + pow(y1,2) + 2*x2*y2 + pow(y2,2) + 2*x3*y3 + pow(y3,2))* (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2))/2.;
        return dudv;
    }
    
    template<typename Scalar>
    Eigen::Matrix<Scalar, 3, 3> dudv_ex_deg(const Eigen::Matrix<Scalar, 3, 1>& Nv, const Eigen::Matrix<Scalar, 3, 1>& x, const Eigen::Matrix<Scalar, 3, 1>& y) {
        const Scalar Nv1=Nv(0), Nv2=Nv(1), Nv3=Nv(2), x1=x(0), x2=x(1), x3=x(2), y1=y(0), y2=y(1), y3=y(2);
        Eigen::Matrix<Scalar, 3, 3> dudv;
        dudv << ((2*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3)*(Nv3*(x2 - y2) + Nv2*(-x3 + y3))* (-2*Nv2*(x1 - y1)*(x2 - y2) - 2*Nv3*(x1 - y1)*(x3 - y3) + 2*Nv1*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(x3*y2 - x2*y3)*(Nv3*(x2 - y2) + Nv2*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3)*(Nv3*(x2 - y2) + Nv2*(-x3 + y3))* (-2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) + 2*Nv2*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(-x3 + y3)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - (2*(-(x3*y1) + x1*y3)*(Nv3*(x2 - y2) + Nv2*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(2*Nv3*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv1*(x1 - y1)*(x3 - y3) - 2*Nv2*(x2 - y2)*(x3 - y3))* (Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3)*(Nv3*(x2 - y2) + Nv2*(-x3 + y3)))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(x2 - y2)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - (2*(x2*y1 - x1*y2)*(Nv3*(x2 - y2) + Nv2*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(-(Nv3*x2*y1) + Nv2*x3*y1 + Nv3*x1*y2 - Nv1*x3*y2 - Nv2*x1*y3 + Nv1*x2*y3)*(Nv3*(x1 - y1) + Nv1*(-x3 + y3))* (-2*Nv2*(x1 - y1)*(x2 - y2) - 2*Nv3*(x1 - y1)*(x3 - y3) + 2*Nv1*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(-x3 + y3)*(-(Nv3*x2*y1) + Nv2*x3*y1 + Nv3*x1*y2 - Nv1*x3*y2 - Nv2*x1*y3 + Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - (2*(-(x3*y2) + x2*y3)*(Nv3*(x1 - y1) + Nv1*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(-(Nv3*x2*y1) + Nv2*x3*y1 + Nv3*x1*y2 - Nv1*x3*y2 - Nv2*x1*y3 + Nv1*x2*y3)*(Nv3*(x1 - y1) + Nv1*(-x3 + y3))* (-2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) + 2*Nv2*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(x3*y1 - x1*y3)*(Nv3*(x1 - y1) + Nv1*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(2*Nv3*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv1*(x1 - y1)*(x3 - y3) - 2*Nv2*(x2 - y2)*(x3 - y3))* (-(Nv3*x2*y1) + Nv2*x3*y1 + Nv3*x1*y2 - Nv1*x3*y2 - Nv2*x1*y3 + Nv1*x2*y3)*(Nv3*(x1 - y1) + Nv1*(-x3 + y3)))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(x1 - y1)*(-(Nv3*x2*y1) + Nv2*x3*y1 + Nv3*x1*y2 - Nv1*x3*y2 - Nv2*x1*y3 + Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - (2*(-(x2*y1) + x1*y2)*(Nv3*(x1 - y1) + Nv1*(-x3 + y3)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3)* (-2*Nv2*(x1 - y1)*(x2 - y2) - 2*Nv3*(x1 - y1)*(x3 - y3) + 2*Nv1*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(x3*y2 - x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - (2*(-x2 + y2)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3)* (-2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) + 2*Nv2*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2))))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(-(x3*y1) + x1*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))) - (2*(x1 - y1)*(Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2., ((2*(Nv2*(x1 - y1) + Nv1*(-x2 + y2))*(2*Nv3*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv1*(x1 - y1)*(x3 - y3) - 2*Nv2*(x2 - y2)*(x3 - y3))* (Nv3*x2*y1 - Nv2*x3*y1 - Nv3*x1*y2 + Nv1*x3*y2 + Nv2*x1*y3 - Nv1*x2*y3))/ pow(pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2)),2) - (2*(x2*y1 - x1*y2)*(Nv2*(x1 - y1) + Nv1*(-x2 + y2)))/ (pow(Nv3,2)*(pow(x1,2) + pow(x2,2) - 2*x1*y1 + pow(y1,2) - 2*x2*y2 + pow(y2,2)) - 2*Nv2*(x2 - y2)*(Nv1*(x1 - y1) + Nv3*(x3 - y3)) - 2*Nv1*Nv3*(x1 - y1)*(x3 - y3) + pow(Nv2,2)*(pow(x1,2) + pow(x3,2) - 2*x1*y1 + pow(y1,2) - 2*x3*y3 + pow(y3,2)) + pow(Nv1,2)*(pow(x2,2) + pow(x3,2) - 2*x2*y2 + pow(y2,2) - 2*x3*y3 + pow(y3,2))))/2.;
        return dudv;
    }
    
}

#endif
